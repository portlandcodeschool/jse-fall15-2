1.) 

var properFrac = function(n,d) {
  if (n >= d && n%d != 0) {				/* If it's improper and n is not divisible by d*/
    var wholeNum = ( Math.floor(n/d) );		/* Number of times n goes into d completely */
    var remainder = n%d;
    return ( wholeNum + " " + remainder + "/" + d ); 
  } else if ( Math.floor(n/d) === 0) {
      return (n/n) + "/" + (d/n);			/* If n goes into d evenly, simplify */
  } else {								/* Any other cases should be proper fractions, so just put a slash between them */
    	return (n + "/" + d);
  }
};

2.)

a) var i;

Math.round(n);

b) 

var y;

if (x) {
	y = x;
} else {
	y = false;
}

c) for (var count = 15 - i; count < 15; count++) {
	console.log(i);
	i--;
}

d) 

var x;
if (a && b) {
	x = 0;
} else if (!a && !b) {
	x = 2;
} else {
	x = 1;
}

3.) 
a)

var letterTriangle  = function(n) {
	
  var alphabet = ['A\n','B','C','D','E','F','G','H','I','J','K','L','M','N',
                 'O','P','Q','R','S','T','U','V','W','X','Y','Z'];
  
  var fullString = 'A\n';  
    
  var currentLine = alphabet[0];
  
  for (var i = 1; i < n; i++) {	
    var newLine = alphabet[i] + currentLine; //Always end on \n //
    fullString = fullString + newLine;
    currentLine = newLine;
  }

  console.log(fullString);
};

letterTriangle(26);

b) var twelveDays  = function(n) {
  
  var gifts = [0,'and a partridge in a pear tree!\n','two turtle doves,\n','three French hens,\n','four calling birds,\n','five golden rings,\n','six geese a-laying,\n','seven swans a-swimming,\n','eight maids a-milking,\n','nine ladies dancing,\n','ten lords a-leaping,\n','eleven pipers piping,\n','twelve drummers drumming,\n']
  
  switch (n) {
    case 1:
      var fullString = 'On the 1st day of Christmas, my true love gave to me: \n';
      break;
    case 2:
      var fullString = 'On the 2nd day of Christmas, my true love gave to me: \n';
      break;
    case 3:
      var fullString = 'On the 3rd day of Christmas, my true love gave to me: \n';
      break;
    default: 
      var fullString = 'On the ' + n + "th day of Christmas, my true love gave to me: \n";
      break;
  }
  
  var currentLine = gifts[n];
  
  for (var i = n; i > 0; i--) { 
    var newLine = gifts[i]; //Always end on \n //
    fullString = fullString + newLine;
  }

  console.log(fullString);
};

twelveDays(2);

5.) 

a) var and2 = function(a,b) {
  if(a) {
    if(b){
      return true;
    } else return false;
  } else return false;
};


b) 

var and3 = function(a,b,c) {
  if( and2(a,b) ) {
    if(c){
      return true;
    } else return false;
  } else return false;
}

c) 

var andN = function(values) {
  for (var i = 0; i < values.length; i++) {
    if ( !(values[i]) )  {
      return false;
    }
  }
  return true;
};


d)                                                         I couldn't think of an answer to this.

5.) 

a) 

// Simple version (no error-detection)

// function()--> possible return values

var rank = function(id) {                   //Rank
    if (id >= 0 && id <= 3) {             //Let's do this the hard way.
      return 1;                         //All Aces have IDs from 0 to 3
    } else if (id >=4 && id <= 7) {
      return 2;                         //All Twos from 4 to 7
    } else if (id >=8 && id <= 11) {
      return 3;
    } else if (id >=12 && id <= 15) {
      return 4;                          //And so on...
    } else if (id >=16 && id <= 19) {
      return 5;
    } else if (id >=20 && id <= 23) {
      return 6;
    } else if (id >= 24 && id <= 27) {
      return 7;
    } else if (id >= 28 && id <= 31) {
      return 8;
    } else if (id >= 32 && id <= 35) {
      return 9;
    } else if (id >= 36 && id <= 39) {
      return 10;                         //Ad nauseum
    } else if (id >= 40 && id <= 43) {
      return 11;
    } else if (id >= 44 && id <= 47) {
      return 12;
    } else if (id >= 48 && id <= 51) {
      return 13;
    } else {
      return "ERROR";
    }
}; 

var suit = function(id) {     //Suit
  if (id % 4 === 0) {
    return 1;                        //All Hearts have IDs divisible by 4
  } else if ( id % 4 === 1) {
    return 2;                        //And all Diamonds have IDs equal to 1 + a Heart
  } else if (id % 4 === 2) {
    return 3;                        //All Spades are a Heart + 2
  } else if ( id % 4 === 3) {
    return 4;                        //And all Clubs a Heart + 3
  } else return 'ERROR'
};

var heartsArray = ['',0,4,8,12,16,20,24,28,32,36,40,44,48];
var diamondsArray = ['',1,5,9,13,17,21,25,29,33,37,41,45,49];
var spadesArray = ['',2,6,10,14,18,22,26,30,34,38,42,46,50];
var clubsArray = ['',3,7,11,15,19,23,27,31,35,39,43,47,51];

var cardID = function(rank, suit) {     //ID
  switch (suit) {
    case 1:
      return heartsArray[rank];         //If it's a Heart, return the Heart with
      break;                            // the given rank
    case 2: 
      return diamondsArray[rank];       //And so on...
      break;
    case 3:
      return spadesArray[rank];
      break;
    case 4:
      return clubsArray[rank];
      break;
    default:
      return 'ERROR';
      break;
  }
};


var color = function(id) {            //Color
  switch(suit(id)) {
    case 1: 
      return 'red';
      break;
    case 2:
      return 'red';
      break;
    case 3:
      return 'black';
      break;
    case 4:
      return 'black';
      break;
    default: 
      return 'ERROR';
      break;
  }    
};


var cardNames = [0,'Ace','Two','Three','Four','Five','Six','Seven','Eight','Nine','Ten','Jack','Queen','King'];
var suitNames = ['Hearts','Diamonds','Spades','Clubs'];



var name = function(id) {  //Name   Use the id to find the card name and suit name
  return cardNames[rank(id)] + ' of ' + suitNames[suit(id)-1]; // in the given arrays
};

 TESTING:
function assert(claim,message) {
    if (!claim) console.error(message);
}
assert(rank(0)===1,  "Test 1 failed");
assert(rank(3)===1,  "Test 2 failed");
assert(rank(51)===13,"Test 3 failed");
assert(suit(0)===1,  "Test 4 failed");
assert(suit(5)===2,  "Test 5 failed");
assert(suit(51)===4, "Test 6 failed");
assert(cardID(1,1)===0,    "Test 7 failed");
assert(cardID(13,4)===51,  "Test 8 failed");
assert(cardID(8,3)===30,   "Test 9 failed");
assert(color(0)==='red',   "Test 10 failed");
assert(color(2)==='black', "Test 11 failed");
assert(name(5)==='Two of Diamonds', "Test 12 failed");
assert(name(51)==='King of Clubs',  "Test 13 failed");


// My assertions:

assert(rank(52)==='ERROR', "Test 14 failed");
assert(cardID(51,0)==='ERROR', "Test 15 failed");
assert(cardID(0,12)==='ERROR', "Test 16 failed");

assert(suit(51)===4, "Test 17 failed");
assert(rank(1)===1, "Test 18 failed");
assert(color(50)==='black', "Test 19 failed");